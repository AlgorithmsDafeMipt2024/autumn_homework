
#include <gtest/gtest.h>

#include "rmq.hpp"

TEST(sparse_table_get_min, Test_1) {
  std::vector<double> data({1, 5, 8, 6, 7, 4, 3, 2});
  RMQ rmq(data);

  for (int i = 0; i < data.size(); ++i) {
    for (int j = i; j < data.size(); ++j) {
      ASSERT_EQ(rmq.get_min(i, j),
                *std::min_element(data.begin() + i, data.begin() + j + 1));
    }
  }
}

TEST(get_min, Test_1) {
  std::vector<double> data({3, 8, 6, 4, 2, 5, 9, 0, 7, 1});
  RMQ rmq(data);

  for (int i = 0; i < data.size(); ++i) {
    for (int j = i; j < data.size(); ++j) {
      ASSERT_EQ(rmq.get_min(i, j),
                *std::min_element(data.begin() + i, data.begin() + j + 1));
    }
  }
}

TEST(get_min_big_array, Test_1) {
  std::vector<double> data(
      {1681, 2743, 349,  2296, 29,   1964, 1128, 3849, 1758, 1638, 1341, 32,
       2745, 1257, 2654, 439,  1649, 2583, 2910, 2070, 2886, 1286, 1611, 807,
       2857, 2039, 715,  1635, 1167, 3474, 1733, 932,  1385, 1267, 3985, 3445,
       1305, 606,  3658, 1100, 3374, 1155, 2838, 1924, 605,  1620, 2956, 3077,
       1536, 2730, 2957, 994,  2959, 1082, 3349, 1435, 1971, 2284, 2916, 1407,
       1255, 3775, 2433, 787,  855,  211,  1565, 1228, 215,  3313, 989,  2753,
       1125, 2885, 1764, 2655, 2062, 3228, 336,  1269, 167,  2717, 84,   2016,
       2958, 3812, 891,  3814, 3041, 2979, 2467, 3645, 2421, 2375, 3612, 3678,
       1686, 2274, 1727, 2188, 1885, 2170, 790,  1226, 1030, 1981, 2380, 2308,
       834,  3510, 308,  1342, 3677, 2331, 2472, 3586, 972,  2621, 3224, 245,
       3379, 1716, 59,   3050, 448,  2090, 2476, 2334, 2900, 3428, 902,  1704,
       1130, 2558, 3195, 1763, 2216, 1468, 1247, 3831, 971,  3614, 877,  1605,
       3571, 1904, 3309, 918,  995,  642,  3980, 2197, 3444, 392,  2064, 3611,
       3102, 747,  201,  2009, 2096, 2514, 2330, 3263, 1377, 3281, 1140, 3059,
       3590, 1601, 216,  3122, 2128, 2232, 2302, 481,  1503, 117,  474,  551,
       2775, 255,  1302, 905,  484,  1006, 525,  6,    1475, 3285, 3700, 3370,
       1862, 3635, 2081, 3964, 3359, 3984, 1906, 1262, 2818, 1564, 3624, 2315,
       3675, 2982, 3862, 1891, 1108, 3235, 621,  3711, 2922, 256,  472,  3010,
       1493, 1960, 2824, 3906, 2066, 156,  535,  3185, 1081, 2069, 1355, 2993,
       2011, 1025, 1303, 1312, 2635, 1708, 415,  3214, 3898, 1491, 1731, 136,
       2742, 1032, 2661, 1931, 816,  2109, 3596, 3748, 2883, 3151, 1951, 389,
       3954, 1244, 504,  1911, 1104, 69,   803,  717,  770,  1287, 1574, 3097,
       2021, 2735, 195,  1573, 3607, 2199, 610,  2205, 3314, 1111, 641,  370,
       2896, 3561, 100,  3629, 3650, 3808, 2249, 2499, 1331, 1301, 3803, 2728,
       592,  3708, 1847, 1728, 3125, 3267, 1569, 2174, 3948, 2050, 3690, 3483,
       2639, 2868, 699,  3794, 858,  1190, 461,  1893, 2304, 2488, 340,  3637,
       718,  1054, 964,  1908, 1804, 2492, 1440, 3996, 1399, 3566, 3867, 3918,
       79,   2147, 713,  3638, 1509, 3042, 3078, 2815, 2369, 1497, 1921, 1253,
       3391, 2531, 490,  914,  1289, 1446, 3509, 1988, 796,  1957, 50,   1735,
       2851, 2911, 3283, 1646, 266,  1023, 1766, 184,  111,  1641, 292,  1042,
       549,  3284, 3441, 1037, 409,  2914, 1252, 3575, 2028, 3315, 863,  442,
       2971, 2086, 455,  1444, 906,  680,  109,  2120, 1161, 2192, 3512, 1522,
       2477, 2666, 3361, 1403, 3599, 537,  3354, 3944, 2950, 810,  1428, 3525,
       1568, 449,  3627, 1320, 2122, 694,  3212, 554,  2548, 1437, 1103, 3356,
       900,  3219, 307,  483,  3194, 2276, 3462, 471,  1865, 3295, 3570, 2481,
       1853, 1651, 2707, 1665, 1518, 3095, 1158, 2527, 3527, 798,  2269, 3672,
       3239, 2354, 3572, 3115, 1076, 338,  3764, 3765, 1884, 2134, 2129, 2773,
       2312, 2874, 3076, 1003, 2054, 3615, 712,  355,  2569, 1598, 3583, 3738,
       2999, 2709, 3825, 3062, 2142, 3889, 2882, 695,  534,  865,  2381, 3182,
       2168, 3548, 811,  701,  1678, 497,  2486, 3273, 1627, 1271, 3369, 2949,
       1211, 829,  1984, 3494, 2752, 1548, 889,  2072, 3605, 3557, 919,  3795,
       808,  2051, 843,  574,  822,  3105, 91,   1720, 3238, 146,  2849, 306,
       626,  1927, 745,  779,  3994, 980,  3376, 572,  1109, 2300, 248,  3608,
       1237, 1322, 3640, 1292, 2314, 1337, 2057, 1892, 3377, 2336, 2863, 854,
       2223, 3234, 402,  424,  809,  1511, 2926, 922,  1089, 2892, 2913, 406,
       426,  3686, 3699, 3140, 2599, 1063, 2891, 301,  2107, 3934, 53,   1741,
       3935, 613,  3450, 1162, 947,  3005, 640,  65,   515,  3153, 2015, 2586,
       2894, 2719, 2565, 1754, 3770, 2511, 1369, 196,  1707, 2552, 1674, 1955,
       3656, 2547, 3542, 2608, 3191, 2410, 3768, 229,  1926, 2676, 1663, 1462,
       2278, 708,  2185, 1474, 2714, 3491, 3477, 3459, 7,    495,  1061, 2715,
       2788, 1531, 2614, 1599, 1220, 3163, 2604, 555,  3882, 1201, 2789, 3861,
       2259, 2796, 1756, 569,  503,  342,  969,  2759, 3517, 1263, 2002, 984,
       3697, 3793, 92,   3437, 3110, 3533, 586,  1526, 2036, 2320, 3835, 2865,
       774,  833,  304,  1624, 677,  841,  2361, 297,  1313, 1872, 2973, 3916,
       2215, 2053, 789,  1174, 2903, 1241, 1175, 443,  1464, 1819, 213,  645,
       1300, 2705, 801,  1633, 1655, 735,  1762, 533,  55,   3725, 1797, 679,
       1317, 974,  2450, 2038, 1845, 1534, 2221, 734,  3654, 477,  597,  1936,
       675,  2207, 3841, 2402, 3660, 1251, 371,  1644, 3329, 3207, 3471, 873,
       3995, 659,  1619, 527,  76,   73,   696,  3210, 888,  2750, 3482, 2522,
       750,  3885, 62,   352,  1024, 3232, 2180, 936,  3001, 436,  1552, 3123,
       3114, 3414, 1373, 3229, 3859, 3431, 2126, 2741, 926,  2087, 3009, 1864,
       3833, 3535, 3291, 730,  3582, 2990, 1041, 3903, 1266, 1547, 2132, 524,
       1077, 1656, 2518, 3362, 1351, 3134, 1485, 116,  33,   739,  1783, 379,
       2040, 1554, 2704, 2459, 3175, 1613, 1261, 979,  896,  2343, 3556, 3558,
       3201, 2394, 1680, 2585, 929,  520,  2596, 2563, 1223, 1356, 2855, 316,
       3897, 3446, 1993, 83,   3137, 1246, 1580, 3826, 2549, 2114, 37,   3338,
       3397, 1308, 3895, 3126, 852,  3250, 1932, 161,  2638, 2975, 2780, 3012,
       2737, 1688, 3341, 2915, 870,  1258, 1770, 3892, 231,  1382, 1260, 871,
       1306, 2112, 250,  2938, 1912, 1546, 1346, 1026, 2448, 3127, 3342, 3832,
       2253, 70,   3472, 118,  3956, 2754, 1172, 1495, 2840, 1587, 2852, 2699,
       2722, 2669, 714,  2373, 510,  2861, 1281, 2056, 2832, 2179, 1767, 3824,
       2637, 2426, 1593, 3755, 1873, 2755, 1411, 618,  777,  578,  303,  2769,
       417,  3745, 3839, 3716, 3960, 3967, 2035, 1119, 3392, 956,  2932, 1039,
       3111, 1829, 2245, 897,  2613, 825,  2927, 3206, 550,  365,  2869, 2200,
       746,  2751, 3343, 765,  3856, 742,  3519, 2322, 1422, 405,  3448, 1166,
       3776, 2363, 2508, 3691, 3260, 3619, 2046, 3673, 2805, 1004, 386,  3919,
       3737, 2316, 1530, 2677, 2540, 2523, 1642, 1771, 2291, 2566, 3215, 2018,
       656,  2440, 268,  1785, 2350, 2008, 1391, 1616, 2088, 1112, 1288, 1002,
       313,  3500, 828,  3930, 1349, 3757, 2209, 1153, 619,  1117, 3501, 2003,
       2898, 595,  1566, 3308, 1827, 1789, 3138, 1217, 1659, 2097, 219,  289,
       3193, 3758, 3317, 3636, 3879, 279,  3941, 743,  1183, 3368, 1050, 653,
       427,  2809, 851,  788,  2022, 775,  2266, 3301, 563,  310,  3616, 1939,
       1538, 3531, 1294, 1654, 2073, 2074, 139,  2995, 2151, 2942, 3049, 2734,
       1165, 3072, 293,  347});
  RMQ rmq(data);

  for (int i = 0; i < data.size(); ++i) {
    for (int j = i; j < data.size(); ++j) {
      ASSERT_EQ(rmq.get_min(i, j),
                *std::min_element(data.begin() + i, data.begin() + j + 1));
    }
  }
}